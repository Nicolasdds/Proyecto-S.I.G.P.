<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TextBox1.Text" xml:space="preserve">
    <value>Este manual le permitirá aprender a utilizar todas las funcionalidades básicas de S.I.G.P. 
Cómo acceder a S.I.G.P.:
Acceda al acceso directo que se encuentra en su escritorio, introduzca su usuario y contraseña, luego dar click en botón “INICIAR SESION” para acceder  a la pantalla principal del programa. 
Crear nueva empresa:
Diríjase a Archivo/Nuevo/Empresa, introduzca el rut de la empresa a ingresar y haga doble click en el botón “BUSCAR  EMPRESA”, si la empresa ya existe el sistema le avisara y de lo contrario deberá ingresar todos los datos de la empresa. Una vez finalizado el ingreso de los datos debe de dar click en el botón “GUARDAR” , sino se desea agregar otra empresa dar click al botón “SALIR”.
Ingresar nuevo trabajador:
Una vez guardada la empresa dar click en el botón “NUEVO TRABAJADOR”.
Ingresar la c.i del trabajador y dar click en el botón “BUSCAR TRABAJADOR”, si el trabajador existe el sistema le avisara y de lo contrario deberá ingresar todos los datos del trabajador, una vez realizada esta tarea dar click en el botón  “GUARDAR TRABAJADOR”.
A continuación se deberá ingresar el sector y el turno del trabajador y dar click en el botón “ASIGNAR TRABAJADOR”.
Si no se desea agregar otro trabajador dar click en “SALIR”.


Ingresar nuevo relevamiento:
Diríjase a Archivo/Nuevo/Relevamiento e introduzca el rut de la empresa con la que desea trabajar y haga click en el botón “BUSCAR”, si la empresa ya existe el sistema le  permitirá asignar una fecha de inicio y de lo contrario si la empresa no existe el sistema le permitirá ingresarla. A continuación dar click en el botón “GUARDAR RELEVAMIENTO” . Si el usuario no tiene contrato con esta empresa el sistema le permitirá crear uno, en caso de que no quiera agregar un nuevo relevamiento dar click en botón “SALIR”.
Abrir relevamiento:
Diríjase a Archivo/Nuevo/Abrir Relevamiento, seleccione el criterio por el cual desea buscar Relevamiento, ingresar la información que el sistema le solicita y haga click en el botón “BUSCAR”, una vez que aparezcan los datos en el panel principal, seleccionar con doble click el relevamiento con el que desea trabajar.
Para confirmar la empresa que ha seleccionado, verifique en el encabezado del sistema si aparece el nombre de la misma,
Desarrollo del relevamiento:  
Para poder operar en las distintas herramientas del sistema, se deberá hacer uso del menú  “Etapas”, el cual contendrá los siguientes ítems; “Cuestionario”, “Calculo”, “Mapa”, “Inventario” y a su vez a través de este menú podrá dar por finalizado el Relevamiento.
Abrir reporte general:
Diríjase a Archivo/Abrir/Reporte General, seleccione el cuestionario y el  mapa a partir de los menús desplegables a su derecha y dar Crick en el botón “BUSCAR”.
Cuando termine de utilizar el reporte dar click en el botón “SALIR”.
Cerrar proyecto:
Diríjase a Archivo/Cerrar proyecto cuando haya decidido dejar de trabajar en el mismo.

Cambiar de usuario:
Diríjase a Archivo/Cerrar Cesión, el cual lo conducirá nuevamente a la ventana del login. Donde podrá acceder con otras credenciales.
Información general:
Diríjase al menú de Ayuda  donde dispondrá de toda la información básica del sistema, así como los números principales de sistema y el soporte técnico especializado de Hipercode.


 
 
</value>
  </data>
</root>